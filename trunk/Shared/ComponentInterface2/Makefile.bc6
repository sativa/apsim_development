!if !$d(BCB)
BCB = $(MAKEDIR)\..
!endif

!include $(APSROOT)\APSBuild\platform.make
!include $(APSROOT)\APSBuild\cpp.make

OBJECTS = ComponentInterface.obj       \
          message.obj                  \
          TypeConverter.obj            \
          ArraySpecifier.obj           \
          CMPScienceAPI.obj            \
          CMPComponentInterface.obj    \
          CMPData.obj                  \
          CMPComponentEntryPoints.obj  \
          EntryPoints.obj

FOBJECTS =  ComponentInterface.obj       \
          message.obj                  \
          TypeConverter.obj            \
          ArraySpecifier.obj           \
          CMPScienceAPI.obj            \
          CMPComponentInterface.obj    \
          CMPData.obj                  \
          FORTRANComponentWrapper.obj  

PACKAGES = vcl.bpi rtl.bpi
USERDEFINES =
SYSDEFINES = NO_STRICT;_RTLDLL;USEPACKAGES
INCLUDEPATH = $(SYSINCLUDES);$(APSROOT)\Shared;$(BCB)\Components\Boost
LIBPATH = $(SYSLIBPATH)
LIBRARIES = rtl.lib
LIBFILES = $(SYSLIBS)                                    \
           $(APSROOT)\Shared\general\general.lib         \
           $(BCB)\Components\LibXml2\win32\LibXml2.lib

all: DataTypes.h ComponentInterface2.dll FortranComponentInterface2.dll FORTRANEntryPoints.obj


ALLOBJ = c0d32.obj $(PACKAGES) $(OBJECTS)
ALLFOBJ = c0d32.obj $(PACKAGES) $(FOBJECTS)
ALLRES = $(RESFILES)
ALLLIB = vcl.lib $(LIBFILES) $(LIBRARIES) import32.lib cp32mti.lib
# ---------------------------------------------------------------------------
# For ComponentInterface.dll, use:
CFLAG1 =  $(SYSCFLAGS) -tWD -tWM
# Use this with lahey fortran-linked objects
CFLAGLF95 =  -x- -RT- -r- -H=$(APSROOT)\Bin\vcl60.csm -Hc -Vx -Ve -X- -a8 -b- -k -y -v -vi- -tWD -tWM -c

WARNINGS = -w-par
LFLAGS = $(SYSLDFLAGS) -aa -Tpd -x -Gn -Gi -v

CC=$(BCB)\Bin\bcc32.exe
LINKER=$(BCB)\Bin\ilink32.exe
IMPLIB=$(BCB)\Bin\implib.exe
IMPDEF=$(BCB)\Bin\impdef.exe

.cpp.obj: 
    $(CC) $(CFLAG1) $(WARNINGS) -I$(INCLUDEPATH) -D$(USERDEFINES);$(SYSDEFINES) -n$(@D) {$< }

ComponentInterface2.dll: $(OBJECTS) 
	$(LINKER) @&&!
$(LFLAGS) -L$(LIBPATH) +
$(ALLOBJ), +
ComponentInterface2.dll,, +
$(ALLLIB), +
$(DEFFILE), +
$(ALLRES)
!
	$(IMPLIB) ComponentInterface2.lib ComponentInterface2.dll
	move /Y ComponentInterface2.dll ..\..\bin

FortranComponentInterface2.dll: $(FOBJECTS)
	$(LINKER) @&&!
$(LFLAGS) -L$(LIBPATH) +
$(ALLFOBJ), +
FortranComponentInterface2.dll,, +
$(ALLLIB), +
$(DEFFILE), +
$(ALLRES)
!
	$(IMPDEF) FortranComponentInterface2.def FortranComponentInterface2.dll
	$(APSROOT)\Tools\def2imp\def2imp.exe FortranComponentInterface2.def FortranComponentInterface2.imp
	#$(IMPLIB) FortranComponentInterface2.lib FortranComponentInterface2.dll
	move /Y FortranComponentInterface2.dll ..\..\bin

FORTRANEntryPoints.obj: FORTRANEntryPoints.cpp

DataTypes.h: $(APSROOT)\apsim\infra\datatypes.interface datatypes.macro $(APSROOT)\Bin\ProcessDataTypesInterface.exe
   call DataTypes.bat

clean:
	$(RM) ComponentInterface2.lib $(OBJECTS) $(FOBJECTS) FORTRANEntryPoints.obj DataTypes.h
